base = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ADD, Eb, Gb),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ADD, Ew, Gw),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_ADD, Gb, Eb),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_ADD, Gw, Ew),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_ADD, AL, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_ADD, AX, Iw),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_PUSH_Sreg, ES),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_POP_Sreg, ES),
    0x08: Opcode(0x08, OpcodeType.Normal, Operation_OR, Eb, Gb),
    0x09: Opcode(0x09, OpcodeType.Normal, Operation_OR, Ew, Gw),
    0x0A: Opcode(0x0A, OpcodeType.Normal, Operation_OR, Gb, Eb),
    0x0B: Opcode(0x0B, OpcodeType.Normal, Operation_OR, Gw, Ew),
    0x0C: Opcode(0x0C, OpcodeType.Normal, Operation_OR, AL, Ib),
    0x0D: Opcode(0x0D, OpcodeType.Normal, Operation_OR, AX, Iw),
    0x0E: Opcode(0x0E, OpcodeType.Normal, Operation_PUSH_Sreg, CS),
    0x0F: Opcode(0x0F, OpcodeType.Normal, Operation_POP_Sreg, CS),
    0x10: Opcode(0x10, OpcodeType.Normal, Operation_ADC, Eb, Gb),
    0x11: Opcode(0x11, OpcodeType.Normal, Operation_ADC, Ew, Gw),
    0x12: Opcode(0x12, OpcodeType.Normal, Operation_ADC, Gb, Eb),
    0x13: Opcode(0x13, OpcodeType.Normal, Operation_ADC, Gw, Ew),
    0x14: Opcode(0x14, OpcodeType.Normal, Operation_ADC, AL, Ib),
    0x15: Opcode(0x15, OpcodeType.Normal, Operation_ADC, AX, Iw),
    0x16: Opcode(0x16, OpcodeType.Normal, Operation_PUSH_Sreg, SS),
    0x17: Opcode(0x17, OpcodeType.Normal, Operation_POP_Sreg, SS),
    0x18: Opcode(0x18, OpcodeType.Normal, Operation_SBB, Eb, Gb),
    0x19: Opcode(0x19, OpcodeType.Normal, Operation_SBB, Ew, Gw),
    0x1A: Opcode(0x1A, OpcodeType.Normal, Operation_SBB, Gb, Eb),
    0x1B: Opcode(0x1B, OpcodeType.Normal, Operation_SBB, Gw, Ew),
    0x1C: Opcode(0x1C, OpcodeType.Normal, Operation_SBB, AL, Ib),
    0x1D: Opcode(0x1D, OpcodeType.Normal, Operation_SBB, AX, Iw),
    0x1E: Opcode(0x1E, OpcodeType.Normal, Operation_PUSH_Sreg, DS),
    0x1F: Opcode(0x1F, OpcodeType.Normal, Operation_POP_Sreg, DS),
    0x20: Opcode(0x20, OpcodeType.Normal, Operation_AND, Eb, Gb),
    0x21: Opcode(0x21, OpcodeType.Normal, Operation_AND, Ew, Gw),
    0x22: Opcode(0x22, OpcodeType.Normal, Operation_AND, Gb, Eb),
    0x23: Opcode(0x23, OpcodeType.Normal, Operation_AND, Gw, Ew),
    0x24: Opcode(0x24, OpcodeType.Normal, Operation_AND, AL, Ib),
    0x25: Opcode(0x25, OpcodeType.Normal, Operation_AND, AX, Iw),
    0x26: Opcode(0x26, OpcodeType.SegmentPrefix, Operation.Segment_Prefix, op1=Segment_ES),
    0x27: Opcode(0x27, OpcodeType.Normal, Operation_DAA),
    0x28: Opcode(0x28, OpcodeType.Normal, Operation_SUB, Eb, Gb),
    0x29: Opcode(0x29, OpcodeType.Normal, Operation_SUB, Ew, Gw),
    0x2A: Opcode(0x2A, OpcodeType.Normal, Operation_SUB, Gb, Eb),
    0x2B: Opcode(0x2B, OpcodeType.Normal, Operation_SUB, Gw, Ew),
    0x2C: Opcode(0x2C, OpcodeType.Normal, Operation_SUB, AL, Ib),
    0x2D: Opcode(0x2D, OpcodeType.Normal, Operation_SUB, AX, Iw),
    0x2E: Opcode(0x2E, OpcodeType.SegmentPrefix, Operation.Segment_Prefix, op1=Segment_CS),
    0x2F: Opcode(0x2F, OpcodeType.Normal, Operation_DAS),
    0x30: Opcode(0x30, OpcodeType.Normal, Operation_XOR, Eb, Gb),
    0x31: Opcode(0x31, OpcodeType.Normal, Operation_XOR, Ew, Gw),
    0x32: Opcode(0x32, OpcodeType.Normal, Operation_XOR, Gb, Eb),
    0x33: Opcode(0x33, OpcodeType.Normal, Operation_XOR, Gw, Ew),
    0x34: Opcode(0x34, OpcodeType.Normal, Operation_XOR, AL, Ib),
    0x35: Opcode(0x35, OpcodeType.Normal, Operation_XOR, AX, Iw),
    0x36: Opcode(0x36, OpcodeType.SegmentPrefix, Operation.Segment_Prefix, op1=Segment_SS),
    0x37: Opcode(0x37, OpcodeType.Normal, Operation_AAA),
    0x38: Opcode(0x38, OpcodeType.Normal, Operation_CMP, Eb, Gb),
    0x39: Opcode(0x39, OpcodeType.Normal, Operation_CMP, Ew, Gw),
    0x3A: Opcode(0x3A, OpcodeType.Normal, Operation_CMP, Gb, Eb),
    0x3B: Opcode(0x3B, OpcodeType.Normal, Operation_CMP, Gw, Ew),
    0x3C: Opcode(0x3C, OpcodeType.Normal, Operation_CMP, AL, Ib),
    0x3D: Opcode(0x3D, OpcodeType.Normal, Operation_CMP, AX, Iw),
    0x3E: Opcode(0x3E, OpcodeType.SegmentPrefix, Operation.Segment_Prefix, op1=Segment_DS),
    0x3F: Opcode(0x3F, OpcodeType.Normal, Operation_AAS),
    0x40: Opcode(0x40, OpcodeType.Normal, Operation_INC, AX),
    0x41: Opcode(0x41, OpcodeType.Normal, Operation_INC, CX),
    0x42: Opcode(0x42, OpcodeType.Normal, Operation_INC, DX),
    0x43: Opcode(0x43, OpcodeType.Normal, Operation_INC, BX),
    0x44: Opcode(0x44, OpcodeType.Normal, Operation_INC, SP),
    0x45: Opcode(0x45, OpcodeType.Normal, Operation_INC, BP),
    0x46: Opcode(0x46, OpcodeType.Normal, Operation_INC, SI),
    0x47: Opcode(0x47, OpcodeType.Normal, Operation_INC, DI),
    0x48: Opcode(0x48, OpcodeType.Normal, Operation_DEC, AX),
    0x49: Opcode(0x49, OpcodeType.Normal, Operation_DEC, CX),
    0x4A: Opcode(0x4A, OpcodeType.Normal, Operation_DEC, DX),
    0x4B: Opcode(0x4B, OpcodeType.Normal, Operation_DEC, BX),
    0x4C: Opcode(0x4C, OpcodeType.Normal, Operation_DEC, SP),
    0x4D: Opcode(0x4D, OpcodeType.Normal, Operation_DEC, BP),
    0x4E: Opcode(0x4E, OpcodeType.Normal, Operation_DEC, SI),
    0x4F: Opcode(0x4F, OpcodeType.Normal, Operation_DEC, DI),
    0x50: Opcode(0x50, OpcodeType.Normal, Operation_PUSH, AX),
    0x51: Opcode(0x51, OpcodeType.Normal, Operation_PUSH, CX),
    0x52: Opcode(0x52, OpcodeType.Normal, Operation_PUSH, DX),
    0x53: Opcode(0x53, OpcodeType.Normal, Operation_PUSH, BX),
    0x54: Opcode(0x54, OpcodeType.Normal, Operation_PUSH, SP),
    0x55: Opcode(0x55, OpcodeType.Normal, Operation_PUSH, BP),
    0x56: Opcode(0x56, OpcodeType.Normal, Operation_PUSH, SI),
    0x57: Opcode(0x57, OpcodeType.Normal, Operation_PUSH, DI),
    0x58: Opcode(0x58, OpcodeType.Normal, Operation_POP, AX),
    0x59: Opcode(0x59, OpcodeType.Normal, Operation_POP, CX),
    0x5A: Opcode(0x5A, OpcodeType.Normal, Operation_POP, DX),
    0x5B: Opcode(0x5B, OpcodeType.Normal, Operation_POP, BX),
    0x5C: Opcode(0x5C, OpcodeType.Normal, Operation_POP, SP),
    0x5D: Opcode(0x5D, OpcodeType.Normal, Operation_POP, BP),
    0x5E: Opcode(0x5E, OpcodeType.Normal, Operation_POP, SI),
    0x5F: Opcode(0x5F, OpcodeType.Normal, Operation_POP, DI),
    0x60: Opcode(0x60, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Overflow),
    0x61: Opcode(0x61, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotOverflow),
    0x62: Opcode(0x62, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Below),
    0x63: Opcode(0x63, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_AboveOrEqual),
    0x64: Opcode(0x64, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Equal),
    0x65: Opcode(0x65, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotEqual),
    0x66: Opcode(0x66, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_BelowOrEqual),
    0x67: Opcode(0x67, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Above),
    0x68: Opcode(0x68, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Sign),
    0x69: Opcode(0x69, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotSign),
    0x6A: Opcode(0x6A, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Parity),
    0x6B: Opcode(0x6B, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotParity),
    0x6C: Opcode(0x6C, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Less),
    0x6D: Opcode(0x6D, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_GreaterOrEqual),
    0x6E: Opcode(0x6E, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_LessOrEqual),
    0x6F: Opcode(0x6F, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Greater),
    0x70: Opcode(0x70, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Overflow),
    0x71: Opcode(0x71, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotOverflow),
    0x72: Opcode(0x72, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Below),
    0x73: Opcode(0x73, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_AboveOrEqual),
    0x74: Opcode(0x74, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Equal),
    0x75: Opcode(0x75, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotEqual),
    0x76: Opcode(0x76, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_BelowOrEqual),
    0x77: Opcode(0x77, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Above),
    0x78: Opcode(0x78, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Sign),
    0x79: Opcode(0x79, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotSign),
    0x7A: Opcode(0x7A, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Parity),
    0x7B: Opcode(0x7B, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_NotParity),
    0x7C: Opcode(0x7C, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Less),
    0x7D: Opcode(0x7D, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_GreaterOrEqual),
    0x7E: Opcode(0x7E, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_LessOrEqual),
    0x7F: Opcode(0x7F, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_Greater),
    0x80: Opcode(0x80, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0x81: Opcode(0x81, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0x82: Opcode(0x82, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0x83: Opcode(0x83, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0x84: Opcode(0x84, OpcodeType.Normal, Operation_TEST, Gb, Eb),
    0x85: Opcode(0x85, OpcodeType.Normal, Operation_TEST, Gw, Ew),
    0x86: Opcode(0x86, OpcodeType.Normal, Operation_XCHG, Eb, Gb),
    0x87: Opcode(0x87, OpcodeType.Normal, Operation_XCHG, Ew, Gw),
    0x88: Opcode(0x88, OpcodeType.Normal, Operation_MOV, Eb, Gb),
    0x89: Opcode(0x89, OpcodeType.Normal, Operation_MOV, Ew, Gw),
    0x8A: Opcode(0x8A, OpcodeType.Normal, Operation_MOV, Gb, Eb),
    0x8B: Opcode(0x8B, OpcodeType.Normal, Operation_MOV, Gw, Ew),
    0x8C: Opcode(0x8C, OpcodeType.Normal, Operation_MOV_Sreg, Ew, Sw),
    0x8D: Opcode(0x8D, OpcodeType.Normal, Operation_LEA, Gw, M),
    0x8E: Opcode(0x8E, OpcodeType.Normal, Operation_MOV_Sreg, Sw, Ew),
    0x8F: Opcode(0x8F, OpcodeType.Normal, Operation_POP, Ew),
    0x90: Opcode(0x90, OpcodeType.Nop, Operation.NOP),
    0x91: Opcode(0x91, OpcodeType.Normal, Operation_XCHG, CX, AX),
    0x92: Opcode(0x92, OpcodeType.Normal, Operation_XCHG, DX, AX),
    0x93: Opcode(0x93, OpcodeType.Normal, Operation_XCHG, BX, AX),
    0x94: Opcode(0x94, OpcodeType.Normal, Operation_XCHG, SP, AX),
    0x95: Opcode(0x95, OpcodeType.Normal, Operation_XCHG, BP, AX),
    0x96: Opcode(0x96, OpcodeType.Normal, Operation_XCHG, SI, AX),
    0x97: Opcode(0x97, OpcodeType.Normal, Operation_XCHG, DI, AX),
    0x98: Opcode(0x98, OpcodeType.Normal, Operation_CBW),
    0x99: Opcode(0x99, OpcodeType.Normal, Operation_CWD),
    0x9A: Opcode(0x9A, OpcodeType.Normal, Operation_CALL_Far, Ap),
    0x9B: Opcode(0x9B, OpcodeType.Normal, Operation_WAIT),
    0x9C: Opcode(0x9C, OpcodeType.Normal, Operation_PUSHF),
    0x9D: Opcode(0x9D, OpcodeType.Normal, Operation_POPF),
    0x9E: Opcode(0x9E, OpcodeType.Normal, Operation_SAHF),
    0x9F: Opcode(0x9F, OpcodeType.Normal, Operation_LAHF),
    0xA0: Opcode(0xA0, OpcodeType.Normal, Operation_MOV, AL, Ob),
    0xA1: Opcode(0xA1, OpcodeType.Normal, Operation_MOV, AX, Ow),
    0xA2: Opcode(0xA2, OpcodeType.Normal, Operation_MOV, Ob, AL),
    0xA3: Opcode(0xA3, OpcodeType.Normal, Operation_MOV, Ow, AX),
    0xA4: Opcode(0xA4, OpcodeType.Normal, Operation_MOVS, Yb, Xb),
    0xA5: Opcode(0xA5, OpcodeType.Normal, Operation_MOVS, Yw, Xw),
    0xA6: Opcode(0xA6, OpcodeType.Normal, Operation_CMPS, Xb, Yb),
    0xA7: Opcode(0xA7, OpcodeType.Normal, Operation_CMPS, Xw, Yw),
    0xA8: Opcode(0xA8, OpcodeType.Normal, Operation_TEST, AL, Ib),
    0xA9: Opcode(0xA9, OpcodeType.Normal, Operation_TEST, AX, Iw),
    0xAA: Opcode(0xAA, OpcodeType.Normal, Operation_STOS, Yb, AL),
    0xAB: Opcode(0xAB, OpcodeType.Normal, Operation_STOS, Yw, AX),
    0xAC: Opcode(0xAC, OpcodeType.Normal, Operation_LODS, AL, Xb),
    0xAD: Opcode(0xAD, OpcodeType.Normal, Operation_LODS, AX, Xw),
    0xAE: Opcode(0xAE, OpcodeType.Normal, Operation_SCAS, AL, Xb),
    0xAF: Opcode(0xAF, OpcodeType.Normal, Operation_SCAS, AX, Xw),
    0xB0: Opcode(0xB0, OpcodeType.Normal, Operation_MOV, AL, Ib),
    0xB1: Opcode(0xB1, OpcodeType.Normal, Operation_MOV, CL, Ib),
    0xB2: Opcode(0xB2, OpcodeType.Normal, Operation_MOV, DL, Ib),
    0xB3: Opcode(0xB3, OpcodeType.Normal, Operation_MOV, BL, Ib),
    0xB4: Opcode(0xB4, OpcodeType.Normal, Operation_MOV, AH, Ib),
    0xB5: Opcode(0xB5, OpcodeType.Normal, Operation_MOV, CH, Ib),
    0xB6: Opcode(0xB6, OpcodeType.Normal, Operation_MOV, DH, Ib),
    0xB7: Opcode(0xB7, OpcodeType.Normal, Operation_MOV, BH, Ib),
    0xB8: Opcode(0xB8, OpcodeType.Normal, Operation_MOV, AX, Iw),
    0xB9: Opcode(0xB9, OpcodeType.Normal, Operation_MOV, CX, Iw),
    0xBA: Opcode(0xBA, OpcodeType.Normal, Operation_MOV, DX, Iw),
    0xBB: Opcode(0xBB, OpcodeType.Normal, Operation_MOV, BX, Iw),
    0xBC: Opcode(0xBC, OpcodeType.Normal, Operation_MOV, SP, Iw),
    0xBD: Opcode(0xBD, OpcodeType.Normal, Operation_MOV, BP, Iw),
    0xBE: Opcode(0xBE, OpcodeType.Normal, Operation_MOV, SI, Iw),
    0xBF: Opcode(0xBF, OpcodeType.Normal, Operation_MOV, DI, Iw),
    0xC0: Opcode(0xC0, OpcodeType.Normal, Operation_RET_Near, Iw),
    0xC1: Opcode(0xC1, OpcodeType.Normal, Operation_RET_Near),
    0xC2: Opcode(0xC2, OpcodeType.Normal, Operation_RET_Near, Iw),
    0xC3: Opcode(0xC3, OpcodeType.Normal, Operation_RET_Near),
    0xC4: Opcode(0xC4, OpcodeType.Normal, Operation_LXS, ES, Gw, Mp),
    0xC5: Opcode(0xC5, OpcodeType.Normal, Operation_LXS, DS, Gw, Mp),
    0xC6: Opcode(0xC6, OpcodeType.Normal, Operation_MOV, Eb, Ib),
    0xC7: Opcode(0xC7, OpcodeType.Normal, Operation_MOV, Ew, Iw),
    0xC8: Opcode(0xC8, OpcodeType.Normal, Operation_RET_Far, Iw),
    0xC9: Opcode(0xC9, OpcodeType.Normal, Operation_RET_Far),
    0xCA: Opcode(0xCA, OpcodeType.Normal, Operation_RET_Far, Iw),
    0xCB: Opcode(0xCB, OpcodeType.Normal, Operation_RET_Far),
    0xCC: Opcode(0xCC, OpcodeType.Normal, Operation_INT, Cb(3)),
    0xCD: Opcode(0xCD, OpcodeType.Normal, Operation_INT, Ib),
    0xCE: Opcode(0xCE, OpcodeType.Normal, Operation_INTO),
    0xCF: Opcode(0xCF, OpcodeType.Normal, Operation_IRET),
    0xD0: Opcode(0xD0, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xD1: Opcode(0xD1, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xD2: Opcode(0xD2, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xD3: Opcode(0xD3, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xD4: Opcode(0xD4, OpcodeType.Normal, Operation_AAM, Ib),
    0xD5: Opcode(0xD5, OpcodeType.Normal, Operation_AAD, Ib),
    0xD6: Opcode(0xD6, OpcodeType.Normal, Operation_SALC),
    0xD7: Opcode(0xD7, OpcodeType.Normal, Operation_XLAT),
    0xD8: Opcode(0xD8, OpcodeType.Normal, Operation_Escape, Eb),
    0xD9: Opcode(0xD9, OpcodeType.Normal, Operation_Escape, Eb),
    0xDA: Opcode(0xDA, OpcodeType.Normal, Operation_Escape, Eb),
    0xDB: Opcode(0xDB, OpcodeType.Normal, Operation_Escape, Eb),
    0xDC: Opcode(0xDC, OpcodeType.Normal, Operation_Escape, Eb),
    0xDD: Opcode(0xDD, OpcodeType.Normal, Operation_Escape, Eb),
    0xDE: Opcode(0xDE, OpcodeType.Normal, Operation_Escape, Eb),
    0xDF: Opcode(0xDF, OpcodeType.Normal, Operation_Escape, Eb),
    0xE0: Opcode(0xE0, OpcodeType.Normal, Operation_LOOP, Jb, cc=JumpCondition_NotEqual),
    0xE1: Opcode(0xE1, OpcodeType.Normal, Operation_LOOP, Jb, cc=JumpCondition_Equal),
    0xE2: Opcode(0xE2, OpcodeType.Normal, Operation_LOOP, Jb, cc=JumpCondition_Always),
    0xE3: Opcode(0xE3, OpcodeType.Normal, Operation_Jcc, Jb, cc=JumpCondition_CXZero),
    0xE4: Opcode(0xE4, OpcodeType.Normal, Operation_IN, AL, Ib),
    0xE5: Opcode(0xE5, OpcodeType.Normal, Operation_IN, AX, Ib),
    0xE6: Opcode(0xE6, OpcodeType.Normal, Operation_OUT, Ib, AL),
    0xE7: Opcode(0xE7, OpcodeType.Normal, Operation_OUT, Ib, AX),
    0xE8: Opcode(0xE8, OpcodeType.Normal, Operation_CALL_Near, Jw),
    0xE9: Opcode(0xE9, OpcodeType.Normal, Operation_JMP_Near, Jw),
    0xEA: Opcode(0xEA, OpcodeType.Normal, Operation_JMP_Far, Ap),
    0xEB: Opcode(0xEB, OpcodeType.Normal, Operation_JMP_Near, Jb),
    0xEC: Opcode(0xEC, OpcodeType.Normal, Operation_IN, AL, DX),
    0xED: Opcode(0xED, OpcodeType.Normal, Operation_IN, AX, DX),
    0xEE: Opcode(0xEE, OpcodeType.Normal, Operation_OUT, DX, AL),
    0xEF: Opcode(0xEF, OpcodeType.Normal, Operation_OUT, DX, AX),
    0xF0: Opcode(0xF0, OpcodeType.LockPrefix, Operation.Lock_Prefix),
    0xF1: Opcode(0xF1, OpcodeType.LockPrefix, Operation.Lock_Prefix),
    0xF2: Opcode(0xF2, OpcodeType.RepNEPrefix, Operation.RepNE_Prefix),
    0xF3: Opcode(0xF3, OpcodeType.RepPrefix, Operation.Rep_Prefix),
    0xF4: Opcode(0xF4, OpcodeType.Normal, Operation_HLT),
    0xF5: Opcode(0xF5, OpcodeType.Normal, Operation_CMC),
    0xF6: Opcode(0xF6, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xF7: Opcode(0xF7, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xF8: Opcode(0xF8, OpcodeType.Normal, Operation_CLC),
    0xF9: Opcode(0xF9, OpcodeType.Normal, Operation_STC),
    0xFA: Opcode(0xFA, OpcodeType.Normal, Operation_CLI),
    0xFB: Opcode(0xFB, OpcodeType.Normal, Operation_STI),
    0xFC: Opcode(0xFC, OpcodeType.Normal, Operation_CLD),
    0xFD: Opcode(0xFD, OpcodeType.Normal, Operation_STD),
    0xFE: Opcode(0xFE, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
    0xFF: Opcode(0xFF, OpcodeType.ModRMRegExtension, Operation.Extension_ModRM_Reg),
}

prefix_81 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ADD, Eb, Ib),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_OR, Eb, Ib),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_ADC, Eb, Ib),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_SBB, Eb, Ib),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_AND, Eb, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SUB, Eb, Ib),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_XOR, Eb, Ib),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_CMP, Eb, Ib),
}

prefix_82 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ADD, Ev, Iv),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_OR, Ev, Iv),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_ADC, Ev, Iv),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_SBB, Ev, Iv),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_AND, Ev, Iv),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SUB, Ev, Iv),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_XOR, Ev, Iv),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_CMP, Ev, Iv),
}

prefix_82 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ADD, Eb, Ib),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_OR, Eb, Ib),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_ADC, Eb, Ib),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_SBB, Eb, Ib),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_AND, Eb, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SUB, Eb, Ib),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_XOR, Eb, Ib),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_CMP, Eb, Ib),
}
prefix_83 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ADD, Ev, Ib),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_OR, Ev, Ib),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_ADC, Ev, Ib),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_SBB, Ev, Ib),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_AND, Ev, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SUB, Ev, Ib),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_XOR, Ev, Ib),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_CMP, Ev, Ib),
}
prefix_c0 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Eb, Ib),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Eb, Ib),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Eb, Ib),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Eb, Ib),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Eb, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Eb, Ib),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Eb, Ib),
}
prefix_c1 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Ev, Ib),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Ev, Ib),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Ev, Ib),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Ev, Ib),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Ev, Ib),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Ev, Ib),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Ev, Ib),
}
prefix_d0 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Eb, Cb(1)),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Eb, Cb(1)),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Eb, Cb(1)),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Eb, Cb(1)),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Eb, Cb(1)),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Eb, Cb(1)),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Eb, Cb(1)),
}
prefix_d1 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Ev, Cb(1)),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Ev, Cb(1)),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Ev, Cb(1)),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Ev, Cb(1)),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Ev, Cb(1)),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Ev, Cb(1)),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Ev, Cb(1)),
}
prefix_d2 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Eb, CL),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Eb, CL),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Eb, CL),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Eb, CL),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Eb, CL),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Eb, CL),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Eb, CL),
}
prefix_d3 = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_ROL, Ev, CL),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_ROR, Ev, CL),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_RCL, Ev, CL),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_RCR, Ev, CL),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_SHL, Ev, CL),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_SHR, Ev, CL),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_SAR, Ev, CL),
}
prefix_f6_mem = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_TEST, Eb, Ib),
    0x01: Opcode(0x01, OpcodeType.Invalid, Operation.Invalid),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_NOT, Eb),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_NEG, Eb),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_MUL, Eb),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_IMUL, Eb),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_DIV, Eb),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_IDIV, Eb),
}
prefix_f7_mem = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_TEST, Ew, Iw),
    0x01: Opcode(0x01, OpcodeType.Invalid, Operation.Invalid),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_NOT, Ev),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_NEG, Ev),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_MUL, Ev),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_IMUL, Ev),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_DIV, Ev),
    0x07: Opcode(0x07, OpcodeType.Normal, Operation_IDIV, Ev),
}
prefix_fe_mem = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_INC, Eb),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_DEC, Eb),
    0x02: Opcode(0x02, OpcodeType.Invalid, Operation.Invalid),
    0x03: Opcode(0x03, OpcodeType.Invalid, Operation.Invalid),
    0x04: Opcode(0x04, OpcodeType.Invalid, Operation.Invalid),
    0x05: Opcode(0x05, OpcodeType.Invalid, Operation.Invalid),
    0x06: Opcode(0x06, OpcodeType.Invalid, Operation.Invalid),
    0x07: Opcode(0x07, OpcodeType.Invalid, Operation.Invalid),
}
prefix_ff_mem = {
    0x00: Opcode(0x00, OpcodeType.Normal, Operation_INC, Ev),
    0x01: Opcode(0x01, OpcodeType.Normal, Operation_DEC, Ev),
    0x02: Opcode(0x02, OpcodeType.Normal, Operation_CALL_Near, Ev),
    0x03: Opcode(0x03, OpcodeType.Normal, Operation_CALL_Far, Mp),
    0x04: Opcode(0x04, OpcodeType.Normal, Operation_JMP_Near, Ev),
    0x05: Opcode(0x05, OpcodeType.Normal, Operation_JMP_Far, Mp),
    0x06: Opcode(0x06, OpcodeType.Normal, Operation_PUSH, Ev),
    0x07: Opcode(0x07, OpcodeType.Invalid, Operation.Invalid),
}
